#import numpy as np
from Crypto.Util.number import *

def Next(s,c,n):
	tmp = 0
	for i in range(100):
		tmp += s[i]*c[i]
		tmp %= n
	s.append(tmp)
	return s[0], s[1:]

f = open("output.txt")
a = f.readlines()
tmp = a[0].split(",")
val = []
for i in range(len(tmp)-1):
	val.append(int(tmp[i][1:]))
val.append(int(tmp[-1][1:-2]))
#print(val)
mat = []
for i in range(100):
	m = []
	for j in range(i,i+100):
		m.append(val[j])
	mat.append(m)
#print(mat)
#mat = np.matrix(mat)
#det = np.linalg.det(mat)
#print(det)
det = 9221935175134017976733541560784021221233573153394198391709764446255326181828551407290423899775708077708562305697675052748046282992971219590422990691524800165565314738784859262327346716248799234566806622953785086305005993906831052081297918401698132660344067244789474391067427738009211909463935425543389491472281723250593876985509657960663039704437197969940628613899688672063626133462170204364514504969707993520399866892408764769641575057036580282885567786985044651480764174194118574962131373434359825571033981743137133224761462925184960579535696053613485785810820040451202317445103313937175519546830263699745494377686111619954943068277381914339723465852445250382046246723929598863552065923573978713845016501189600953393039315152600493229863931859543305666586993945377173390370047713959358235742921678442736329142064475361307919566766070678310222558393811154497377733722902172264325946587881916790687816608933192323852200907793946681061755856532564745647051075578611528990992876237459642482880277693624617909016492029231889646396309825527349946658771098566157832167913105623886205417163838594785045801448817350011433481204484594839913146876330623709266733283342693228971724347970555433132889565530434052957276737064792286483359155414694931079380410910167699485237738807945559557844201202438117213307639022262072355491882339835696909396483310519952150363518220551423408387275175953018977412390044872049588482805953558228817438721840682803937612135256858983467929765672241993859151661897216867390906230398738350606009619517423273048395156817730131491910941804681546079938530438448618155375274100060195525597954827574438486355995547667623510260154576206254581529590988065796025907978958893132183863323956117533117649878607811808847398154759485444713501919598551634272347527091907940493886650942587427591864606342751454752418646178525355371581753673414832433606842794733754818500831794062269259671899810646486007406292366869077781351365285734531712466094905279792
n = 18446744073709551629
c = inverse(det,n)
#print(c)
"""
print("[",end="")
for i in range(100,200):
	print("["+str(val[i])+"],",end="")
print("]")
"""
det_n = det%n
f = open("inv.txt")
A_inv = []
a = f.readlines()
for t in a:
	x = t[1:-2].split()
	tmp = []
	for y in x: tmp.append(int(y)*det_n)
	A_inv.append(tmp)

A = mat

E = []
for i in range(100):
	temp = []
	for j in range(100):
		tmp = 0
		for k in range(100):
			tmp += A[i][k]*A_inv[j][k]
			tmp %= n
		temp.append(tmp)
	E.append(temp)
print(E)

B = []
for i in range(100,200): B.append(val[i])
L = []
for i in range(100):
	tmp = 0
	for j in range(100):
		tmp += A_inv[i][j]*B[j]
	L.append(tmp)
#print(L)
C = []
for l in L:
	C.append((c*l))
#print(C)
S = [val[i] for i in range(100)]
for i in range(200):
	g, S = Next(S,C,n)
	print(i)
	assert g == val[i]

enc = "fcf81dc7b3ffc8315d1f2c7b3751743c24b84a0c9505a98f2d98af1824a6ad59d79517b96a3044f00871d47b4c69375962caf7a7be745a91f1f5cbf356f976cfaf46e81c5aa07c7ddb39126d4377cc8c194420fc2f149bfb7c3d0fcf704a22d147f94f2bd3389e0680b92004c652a6c65fb0fb13258217351996c694ad4d124c853d8370c3514051a4dc5c3d1ed5c81c6ada9f1ead43e2bbfdbb925914df4957a51424feeee9"
lf = len(enc)//2
k = ""
for i in range(lf):
	g, S = Next(S,C,n)
	k += hex(g)[2:].zfill(16)
for i in range(0,len(enc),2):
	flag = int(enc[i:i+2],16)^int(k[i:i+2],16)
	print(chr(flag),end="")
print()
#k = "".join([hex(g.next())[2:].zfill(16) for i in range(ceil(lf/8))])[:lf*2]

"""
for i in range(100):
	tmp = 0
	for j in range(100):
		tmp += A[i][j]*C[j]
		tmp %= n
	print(tmp,B[i])
	print(tmp==B[i])
"""
